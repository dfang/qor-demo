version: '3.6'

services:

  postgres:
    image: postgres:10.4
    restart: always
    environment:
      POSTGRES_DB: qor-demo
    volumes:
      - ./data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  graphql-engine:
    image: hasura/graphql-engine:v1.0.0-alpha41
    ports:
      - "18080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/qor-demo
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: "admin"
    command:
      - graphql-engine
      - serve
      - --enable-console

  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - 8080:8080

  qor:
    image: dfang/qor-demo:develop
    # build:
    #   context: .
    command: ["./qor-example"]
    # command: ["./seeds"]
    # command: [ "go", "run", "config/db/seeds/main.go", "config/db/seeds/seeds.go" ]
    restart: always
    depends_on:
      - postgres
    # environment:
    #   QOR_AWS_ACCESS_KEY_ID: AKIAI3Z7SFTABSJQSLDQ
    #   QOR_AWS_SECRET_ACCESS_KEY: secret
    #   QOR_AWS_BUCKET: qor-1234
    #   QOR_AWS_REGION: ap-northeast-1
    env_file:
      - .env
    volumes:
      - ./config/database.yml:/go-app/config/database.yml
    ports:
      - 7000:7000
